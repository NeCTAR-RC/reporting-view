{
  "comments": [
    {
      "key": {
        "uuid": "bad4c104_455edc46",
        "filename": "reporting_view.py",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2016-04-06T03:34:29Z",
      "side": 1,
      "message": "needs to be done before committed",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 104
      },
      "revId": "8e3fcfe57b6004acfbd99a9320eec4b2e6fbf975",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad4c104_254ab880",
        "filename": "reporting_view.py",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2016-04-06T03:34:29Z",
      "side": 1,
      "message": "Should be using v3 api, v2 is deprecated. Also this is available via the python bindings. Check out some example code that lists all projects a user is in (including what roles they have) https://github.com/NeCTAR-RC/hivemind_contrib/blob/master/hivemind_contrib/keystone.py#L242\n\nYou could also look at django-openstack-auth https://github.com/openstack/django_openstack_auth/blob/master/openstack_auth/views.py#L127 which is what the dashboard does",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 37,
        "endChar": 24
      },
      "revId": "8e3fcfe57b6004acfbd99a9320eec4b2e6fbf975",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad4c104_450c1c43",
        "filename": "reporting_view.py",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000129
      },
      "writtenOn": "2016-04-06T03:58:16Z",
      "side": 1,
      "message": "We get a v2 token back from rcshib - the hivemind example has username and password, and while the django auth example has a token I can\u0027t find the code that actually talks to keystone (the django.contrib.auth code calls into a backend that\u0027s provided by a plugin or something).\n\nCan we just supply a v2 token to the v3 endpoint and \u0027upgrade\u0027 it?",
      "parentUuid": "bad4c104_254ab880",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 37,
        "endChar": 24
      },
      "revId": "8e3fcfe57b6004acfbd99a9320eec4b2e6fbf975",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad4c104_7010fc4e",
        "filename": "reporting_view.py",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2016-04-08T05:30:33Z",
      "side": 1,
      "message": "The token you get back from rcshib is just a token isn\u0027t it? There is no difference in a V2 token and a V3 token?",
      "parentUuid": "bad4c104_450c1c43",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 37,
        "endChar": 24
      },
      "revId": "8e3fcfe57b6004acfbd99a9320eec4b2e6fbf975",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad4c104_655be054",
        "filename": "reporting_view.py",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2016-04-06T03:34:29Z",
      "side": 1,
      "message": "When it gets a POST shouldn\u0027t it then redirect to a page if it is successful? Looks like it just renders the login page again? Standard practise in HTTP is to return a 30x after a successful POST",
      "revId": "8e3fcfe57b6004acfbd99a9320eec4b2e6fbf975",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad4c104_65092031",
        "filename": "reporting_view.py",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1000129
      },
      "writtenOn": "2016-04-06T03:58:16Z",
      "side": 1,
      "message": "The redirection is in the javascript code.",
      "parentUuid": "bad4c104_655be054",
      "revId": "8e3fcfe57b6004acfbd99a9320eec4b2e6fbf975",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad4c104_8558e457",
        "filename": "reporting_view.py",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2016-04-06T03:34:29Z",
      "side": 1,
      "message": "Shouldn\u0027t we just not do csrf on the url that rschib posts to as opposed to a blanket disable?",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 104,
        "endChar": 10
      },
      "revId": "8e3fcfe57b6004acfbd99a9320eec4b2e6fbf975",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad4c104_8506241f",
        "filename": "reporting_view.py",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1000129
      },
      "writtenOn": "2016-04-06T03:58:16Z",
      "side": 1,
      "message": "We\u0027re still trying to decide how to handle CSRF. All this code does is take the token handed back by rcshib and put it in session storage on the client end, where it\u0027s used to talk directly to the API server, so we\u0027re not even sure it gains us anything.",
      "parentUuid": "bad4c104_8558e457",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 104,
        "endChar": 10
      },
      "revId": "8e3fcfe57b6004acfbd99a9320eec4b2e6fbf975",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    }
  ]
}